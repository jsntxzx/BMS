package com.oa.dao;import java.util.List;import java.util.Map;import org.hibernate.type.Type;import com.oa.util.Paging;public interface EntityDao {	public List<Object> createQuery(final String queryString);		public Paging createQueryPagingLike(final Class cs,final Map<String, Object> map,final Map<String, Object> orderMap,final Integer curPage,final Integer pageSize);	public Paging createQueryFy(final Class ca, final Map<String, Object> map,			final Map<String, Object> pxmap, final Integer curPage,			final Integer pageSize);	/** 	 * Criteria的查询	 * 	 * @param cs	 *            查询类	 * @param map	 *            查询条件 (key：字段名,value：字段值)	 * @param orderMap	 *            排序条件 (key：字段名,value：字段值)	 * @return	 */	@SuppressWarnings("unchecked")	public List createCriteria(final Class cs, final Map<String, Object> map,			Map<String, Object> orderMap);	/**	 * 带有分页的查询	 * 	 * @param cs	 *            查询类	 * @param map	 *            查询条件 key：字段名 value：字段值	 * @param curPage	 *            当前页码	 * @param pageSize	 *            每页显示条数	 * @return	 */	public Paging createQueryPaging(final Class cs,			final Map<String, Object> map, final Map<String, Object> orderMap,			final Integer curPage, final Integer pageSize);	/**	 * 带分页查询	 * 	 * @param queryString	 *            ： 查询列表的语句	 * @param countQueryString	 *            ： 查询数量的语句	 * @param type	 *            ： 查询方式HQL\SQL	 * @param curPage	 * @param pageSize	 * @return	 */	public Paging createQueryPaging(final String queryString,			final String countQueryString, final String type,			final Integer curPage, final Integer pageSize);	public Paging createQueryPaging2(final String queryString,			final String countQueryString, final String type,			final Integer curPage, final Integer pageSize);	public Object saveOrUpdate(final Object model);	public Object saveOrUpdateForSp(final Object model);	public Object save(final Object model);	public void delete(final Object model);	public Object getObjectById(final Class cs, final Integer id);	/**	 * 利用语句保存记录	 * 	 * @param qStr	 *            ： 保存语句	 * @param type	 *            ： 保存方式HQL\SQL	 * @return	 */	public boolean saveOrUpdateBySQL(final String qStr, final String type);	public List<Object[]> createSqlQuery(final String queryString);	public void deleteSql(String string);	public List<Object[]> createSqlQuery(final String queryString,			final Map<String, Type> addMap);	/**	 * 查询结果映射为HashMap	 */	public List<Map<String, Object>> queryBySQL(final String sql);	/**	 * @see #queryBySQL(String, Object[], Map, int, int)	 * @author ztb 2013-10-11上午11:17:58	 * @param sql	 * @param params	 * @return	 */	public List<Map<String, Object>> queryBySQL(final String sql,			final Object[] params);	/**	 * @see #queryBySQL(String, Object[], Map, int, int)	 * @author ztb 2013-10-11上午11:17:44	 * @param sql	 * @param params	 * @param scalars	 * @return	 */	public List<Map<String, Object>> queryBySQL(final String sql,			final Object[] params,			final Map<String, org.hibernate.type.Type> scalars);	/**	 * 查询结果映射为HashMap,key为列名<br/>	 * 	 * @author ztb 2013-10-11上午11:17:22	 * @param sql	 * @param params	 * @param scalars	 * @return	 */	public List<Map<String, Object>> queryBySQL(final String sql,			final Object[] params,			final Map<String, org.hibernate.type.Type> scalars,			final Integer firstResult, final Integer maxResults);	/**	 * sql分页查询	 * 	 * @param sqlList	 * @param sqlCount	 * @param curPage	 * @param pageSize	 * @return	 */	public Paging createSQLQueryPaging(String sqlList, String sqlCount,			Integer curPage, Integer pageSize);	/**	 * sql分页查询	 * 	 * @param sqlList	 * @param sqlCount	 * @param params	 * @param curPage	 * @param pageSize	 * @return	 */	public Paging createSQLQueryPaging(String sqlList, String sqlCount,			Object[] params, Integer curPage, Integer pageSize);	/**	 * sql count	 * 	 * @author ztb 2013-9-29下午02:27:38	 * @param sql	 * @return	 */	public int findCountBySQL(final String sql);	/**	 * sql count	 * 	 * @author ztb 2013-10-11上午10:46:11	 * @param sql	 * @param params	 * @return	 */	public int findCountBySQL(final String sql, final Object[] params);	/**	 * hql count	 * 	 * @author sdq 2014-02-26上午10:46:11	 * @param sql	 * @return	 */	public int findCountByHQL(final String sql);	/**	 * hql count	 * 	 * @author sdq 2014-02-26上午10:46:11	 * @param sql	 * @param params	 * @return	 */	public int findCountByHQL(final String sql, final Object[] params);	/**	 * 使用SQL更新并返回条数	 * 	 * @author ztb 2014-1-26 上午10:36:14	 * @param sql	 * @return	 */	public int updateBySQL(String sql);			/**	 * 	 * 单表多字段模糊查询	 * @param cs	 * @param sl	 * @param name	 * @param curPage	 * @param pageSize	 * @return	 */	public Paging createQueryPaging3(final Class cs, final List<String> sl , final String name,			final Integer curPage, final Integer pageSize);}